{"version":3,"file":"static/js/26.eb2e9cd0.chunk.js","mappings":"gJACA,QAA+B,iCAA/B,EAAiF,mCAAjF,EAA4H,0BAA5H,EAAsK,kCAAtK,EAAsN,gCAAtN,EAA4P,wBAA5P,EAAiS,+BAAjS,EAA4U,8BAA5U,EAA0X,kCAA1X,EAA2a,iCAA3a,EAA4d,kC,wECO5d,MAAMA,EAAQ,CACZC,KAAM,CACJ,YAEA,YACA,aACA,SACA,UACA,UACA,WACA,cACA,SACA,eACA,aACA,YACA,UACA,WACA,SACA,eACA,iBAEFC,MAAO,CACL,YAEA,YACA,aACA,SACA,UACA,UACA,WACA,cACA,SACA,eACA,YACA,aACA,YAEFC,MAAO,CAAC,QAAS,YAoQnB,SAASC,EAAT,GAAoC,IAAd,QAAEC,GAAW,EACjC,MAAgB,KAAZA,EAAuB,MAEzB,gBAAKC,UAAWC,EAAhB,UACE,uBAAIF,KAGT,CAED,QA1QA,WACE,MAAMG,GAAWC,EAAAA,EAAAA,MACXC,EAAQC,aAAaC,QAAQ,SAC7BC,EAAgB,IACfC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IACpCK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IAChCO,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,IAC3CS,EAAqB,CAAC,EAC5BzB,EAAMC,KAAKyB,SAASC,IAClBF,EAAmBE,EAAO,OAAQ,CAAlC,IAEF3B,EAAME,MAAMwB,SAASC,IACnBF,EAAmBE,EAAO,OAAQ,CAAlC,IAEF3B,EAAMG,MAAMuB,SAASC,IACnBF,EAAmBE,EAAO,OAAQ,CAAlC,IAGF,MAAOC,EAAOC,IAAYb,EAAAA,EAAAA,UAAS,CAAC,IAC7Bc,EAAWC,IAAgBf,EAAAA,EAAAA,UAAS,CAAC,GAE5C,IAAIgB,EAAUC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,mBACoB,MAA1CF,EAAQG,UAAUH,EAAQI,OAAS,KAAYJ,GAAW,MAE9DK,EAAAA,EAAAA,YAAU,KACRf,GAAW,GACXgB,IAAAA,IACQ,GAAEN,UAAiB,CACvBO,QAAS,CACPC,cAAgB,SAAQ9B,OAG3B+B,MAAK,IAAe,IAAd,KAAEC,GAAW,EAClB,MAAMC,EAAW,IAAK9B,GACtB,IAAK,MAAM+B,KAAQF,EACjBC,EAAU,GAAEC,EAAKjB,SAAU,EAE7BkB,QAAQC,IAAI,OAAQH,GACpBd,EAASc,GACTZ,EAAa,IAAKY,IAClBrB,GAAW,EAAX,IAEDyB,OAAOC,IACNH,QAAQI,MAAMD,EAAI3C,SAClBmB,EAAgB,wBAA0BwB,EAAI3C,QAA9C,GAlBJ,GAqBC,IAEH,MAAM6C,EAAiBC,IACrB,MAAMxB,EAAOwB,EAAEC,OAAOC,GACtBzB,EAAMD,IAASC,EAAMD,GACrBkB,QAAQC,IAAIhB,EAAWF,GACvBC,EAAS,IAAKD,GAAd,GAiBI,iBAAE0B,GAAqBC,EAAAA,WAAiBC,EAAAA,GA2B9C,OACE,gBAAKlD,UAAY,GAAEC,IAAnB,UACE,iBAAKD,UAAY,GAAEC,IAAnB,WACE,gBAAKD,UAAU,YAAf,UACE,iBAAKA,UAAU,gBAAf,WACE,gBAAKA,UAAU,wBAAf,UACE,iBAAKA,UAAY,GAAEC,IAAgBkD,MAAO,CAAEC,OAAQ,QAApD,WACE,gBAAKpD,UAAY,GAAEC,IAAnB,UACE,gBACEoD,QAAS,KACP5C,GAAa6C,IAAeA,GAA5B,EAEFtD,UAAY,GAAEC,mCACdkD,MAAO,CAAEI,MAAO,WALlB,WAOE,SAAC,MAAD,IAPF,KAOa,uCAGf,SAAC,KAAD,CAAUC,OAAQhD,EAAlB,UACE,gBAAKR,UAAY,GAAEC,IAAnB,UACE,gBAAKD,UAAU,gBAAf,UACE,gBAAKA,UAAY,YAAWC,IAA5B,SACGP,EAAMC,KAAK8D,KAAKpC,IAEb,UAAC,KAAD,CAEErB,UAAY,GAAEC,IAFhB,WAIE,SAAC,KAAD,CACEyD,KAAK,WACLX,GAAI1B,EAAO,KACXsC,QAASrC,EAAMD,EAAO,MACtBuC,SAAUhB,KAEZ,SAAC,KAAD,CACE5C,UAAY,GAAEC,IACd4D,IAAKxC,EAAO,KAFd,SAIGA,MAbEA,EAAO,sBAwB9B,iBAAKrB,UAAU,WAAf,WACE,iBAAKA,UAAY,GAAEC,IAAnB,WACE,gBAAKD,UAAY,GAAEC,IAAnB,UACE,gBACEoD,QAAS,KACPzC,GAAc0C,IAAeA,GAA7B,EAEFtD,UAAY,GAAEC,mCACdkD,MAAO,CAAEI,MAAO,WALlB,WAOE,SAAC,MAAD,IAPF,KAOe,wCAGjB,SAAC,KAAD,CAAUC,OAAQ7C,EAAlB,UACE,gBAAKX,UAAY,GAAEC,IAAnB,UACE,iBAAKD,UAAU,gBAAf,WACE,gBAAKA,UAAY,YAAWC,IAA5B,SACGP,EAAME,MAAM6D,KAAKpC,IAEd,UAAC,KAAD,CAEErB,UAAY,GAAEC,IAFhB,WAIE,SAAC,KAAD,CACEyD,KAAK,WACLX,GAAI1B,EAAO,KACXsC,QAASrC,EAAMD,EAAO,MACtBuC,SAAUhB,KAEZ,SAAC,KAAD,CACE5C,UAAY,GAAEC,IACd4D,IAAKxC,EAAO,KAFd,SAIGA,MAbEA,EAAO,WAmBpB,gBAAKrB,UAAY,YAAWC,iBAKpC,iBACED,UAAY,GAAEC,IACdkD,MAAO,CAAEW,aAAc,IAAKC,UAAW,QAFzC,WAIE,gBAAK/D,UAAY,GAAEC,IAAnB,UACE,eACEoD,QAAS,KACPvC,GAAcwC,IAAeA,GAA7B,EAEFtD,UAAY,GAAEC,mCACdkD,MAAO,CAAEI,MAAO,WALlB,UAOE,uCAGJ,SAAC,KAAD,CAAUC,OAAQ3C,EAAlB,UACE,gBAAKb,UAAY,GAAEC,IAAnB,UACE,gBAAKD,UAAU,gBAAf,UACE,gBAAKA,UAAY,YAAWC,IAA5B,SACGP,EAAMG,MAAM4D,KAAKpC,IAEd,UAAC,KAAD,CAEErB,UAAY,GAAEC,IAFhB,WAIE,SAAC,KAAD,CACEyD,KAAK,WACLX,GAAI1B,EAAO,KACXsC,QAASrC,EAAMD,EAAO,MACtBuC,SAAUhB,KAEZ,SAAC,KAAD,CACE5C,UAAY,GAAEC,IACd4D,IAAKxC,EAAO,KAFd,SAIGA,MAbEA,EAAO,4BA0BlC,SAACvB,EAAD,CAAcC,QAASkB,KACvB,SAAC,KAAD,CACEsC,MAAM,UACNJ,MAAO,CACLa,WAAY,OAAQC,MAAO,eAE7BjE,UAAWC,EACXoD,QA9Kca,UACpB,IAAIC,EAjBN,WACE,IAAIA,EAAU,CAAEC,IAAK,GAAIC,OAAQ,IACjC,IAAK,IAAIhD,KAAQC,EACXA,EAAMD,OAAYG,EAAUH,KAE1BC,EAAMD,GACR8C,EAAQC,IAAIE,KAAKjD,GAEjB8C,EAAQE,OAAOC,KAAKjD,IAK1B,OADAkB,QAAQC,IAAI2B,GACLA,CACR,CAGeI,GACdvD,GAAW,GACXgB,IAAAA,MAEK,GAAEN,UACH,CAAEyC,WACF,CACElC,QAAS,CACPC,cAAgB,SAAQ9B,OAI7B+B,MAAK,KACJa,GAAkBwB,GAASA,EAAO,IAClCtE,EAAS,0BAAT,IAEDuC,OAAOC,IACNH,QAAQI,MAAMD,GACdxB,EAAgB,4BAA8BwB,EAAI3C,QAAlD,IAED0E,SAAQ,KACPzD,GAAW,EAAX,GAnBJ,EA4KM0D,SAAU3D,EAPZ,wBAcP,C,kCC5SD,MAAMmC,GAAeyB,E,QAAAA,gB","sources":["webpack://spardha23/./src/components/DashBoard/Registration/Events/EventsEdit/EventsEdit.module.css?bdd7","components/DashBoard/Registration/Events/EventsEdit/EventsEdit.js","contexts/EventContext.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"welcome-text\":\"EventsEdit_welcome-text__ifotM\",\"user-dashboard\":\"EventsEdit_user-dashboard__AgXoK\",\"panel\":\"EventsEdit_panel__RneR3\",\"panel-heading\":\"EventsEdit_panel-heading__x21Yi\",\"panel-title\":\"EventsEdit_panel-title__AcGGo\",\"btn\":\"EventsEdit_btn__a8v8J\",\"panel-body\":\"EventsEdit_panel-body__Wad52\",\"container\":\"EventsEdit_container__3PNOr\",\"input-wrapper\":\"EventsEdit_input-wrapper__mcyrl\",\"sports-label\":\"EventsEdit_sports-label__hdgRG\",\"error-message\":\"EventsEdit_error-message__54s9q\"};","import React, { useState, useEffect } from 'react';\nimport styles from './EventsEdit.module.css';\nimport { FaMale, FaFemale } from 'react-icons/fa';\nimport { Button, Collapse, FormGroup, Input, Label } from 'reactstrap';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router';\nimport { EventContext } from '../../../../../contexts/EventContext';\n\nconst GAMES = {\n  boys: [\n    'Athletics',\n    // 'Aquatics',\n    'Badminton',\n    'Basketball',\n    'Boxing',\n    'Kabaddi',\n    'Kho-Kho',\n    'Handball',\n    'Lawn Tennis',\n    'Squash',\n    'Table Tennis',\n    'Volleyball',\n    'Taekwondo',\n    'Cricket',\n    'Football',\n    'Hockey',\n    'Powerlifting',\n    'Weightlifting',\n  ],\n  girls: [\n    'Athletics',\n    // 'Aquatics',\n    'Badminton',\n    'Basketball',\n    'Boxing',\n    'Kabaddi',\n    'Kho-Kho',\n    'Handball',\n    'Lawn Tennis',\n    'Squash',\n    'Table Tennis',\n    'Taekwondo',\n    'Volleyball',\n    'Football',\n  ],\n  mixed: ['Chess', 'Cycling'],\n};\n\nfunction EventsEdit() {\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  const selectedGames = [];\n  const [showBoys, setShowBoys] = useState(true);\n  const [showGirls, setShowGirls] = useState(true);\n  const [showMixed, setShowMixed] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const allFalseGameChoice = {};\n  GAMES.boys.forEach((game) => {\n    allFalseGameChoice[game + '_B'] = false;\n  });\n  GAMES.girls.forEach((game) => {\n    allFalseGameChoice[game + '_G'] = false;\n  });\n  GAMES.mixed.forEach((game) => {\n    allFalseGameChoice[game + '_M'] = false;\n  });\n\n  const [games, setGames] = useState({});\n  const [prevGames, setPrevGames] = useState({}); //for checking if any changes were made\n\n  let baseUrl = process.env.REACT_APP_BASE_URL;\n  if (baseUrl.substring(baseUrl.length - 1) !== '/') baseUrl += '/';\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(`${baseUrl}teams/`, {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      .then(({ data }) => {\n        const newGames = { ...selectedGames };\n        for (const team of data) {\n          newGames[`${team.game}`] = true;\n        }\n        console.log('newg', newGames);\n        setGames(newGames);\n        setPrevGames({ ...newGames });\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err.message);\n        setErrorMessage('Could not fetch data ' + err.message);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const changeHandler = (e) => {\n    const game = e.target.id;\n    games[game] = !games[game];\n    console.log(prevGames, games);\n    setGames({ ...games });\n  };\n  function getChanges() {\n    let changes = { add: [], remove: [] };\n    for (let game in games) {\n      if (games[game] !== !!prevGames[game]) {\n        // changes[game]=games[game];\n        if (games[game]) {\n          changes.add.push(game);\n        } else {\n          changes.remove.push(game);\n        }\n      }\n    }\n    console.log(changes);\n    return changes;\n  }\n  const { setGetEventCount } = React.useContext(EventContext);\n  const submitHandler = async () => {\n    let changes = getChanges();\n    setLoading(true);\n    axios\n      .patch(\n        `${baseUrl}teams/`,\n        { changes },\n        {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        }\n      )\n      .then(() => {\n        setGetEventCount((prev) => prev + 1);\n        navigate('/dashboard/registration');\n      })\n      .catch((err) => {\n        console.error(err); //could not submit changes\n        setErrorMessage('Could not submit changes ' + err.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className={`${styles['user-dashboard']}`}>\n      <div className={`${styles['welcome-text']}`}>\n        <div className=\"col-sm-12\">\n          <div className=\"row xs-1 sm-2\">\n            <div className=\"col-sm-6 mb-3 mb-sm-0\">\n              <div className={`${styles.panel}`} style={{ height: '100%' }}>\n                <div className={`${styles['panel-heading']}`}>\n                  <h4\n                    onClick={() => {\n                      setShowBoys((prevState) => !prevState);\n                    }}\n                    className={`${styles['panel-title']} text-center align-items-center`}\n                    style={{ color: '#FFFFFF' }}\n                  >\n                    <FaMale /> <b>Boys </b>\n                  </h4>\n                </div>\n                <Collapse isOpen={showBoys}>\n                  <div className={`${styles['panel-body']}`}>\n                    <div className=\"row xs-1 sm-2\">\n                      <div className={`col-sm-6 ${styles.container}`}>\n                        {GAMES.boys.map((game) => {\n                          return (\n                            <FormGroup\n                              key={game + '_B'}\n                              className={`${styles['input-wrapper']}`}\n                            >\n                              <Input\n                                type=\"checkbox\"\n                                id={game + '_B'}\n                                checked={games[game + '_B']}\n                                onChange={changeHandler}\n                              />\n                              <Label\n                                className={`${styles['sports-label']}`}\n                                for={game + '_B'}\n                              >\n                                {game}\n                              </Label>\n                            </FormGroup>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                </Collapse>\n              </div>\n            </div>\n            <div className=\"col-sm-6\">\n              <div className={`${styles.panel}`}>\n                <div className={`${styles['panel-heading']}`}>\n                  <h4\n                    onClick={() => {\n                      setShowGirls((prevState) => !prevState);\n                    }}\n                    className={`${styles['panel-title']} text-center align-items-center`}\n                    style={{ color: '#FFFFFF' }}\n                  >\n                    <FaFemale /> <b>Girls </b>\n                  </h4>\n                </div>\n                <Collapse isOpen={showGirls}>\n                  <div className={`${styles['panel-body']}`}>\n                    <div className=\"row xs-1 sm-2\">\n                      <div className={`col-sm-6 ${styles.container}`}>\n                        {GAMES.girls.map((game) => {\n                          return (\n                            <FormGroup\n                              key={game + '_G'}\n                              className={`${styles['input-wrapper']}`}\n                            >\n                              <Input\n                                type=\"checkbox\"\n                                id={game + '_G'}\n                                checked={games[game + '_G']}\n                                onChange={changeHandler}\n                              />\n                              <Label\n                                className={`${styles['sports-label']}`}\n                                for={game + '_G'}\n                              >\n                                {game}\n                              </Label>\n                            </FormGroup>\n                          );\n                        })}\n                      </div>\n                      <div className={`col-sm-6 ${styles.container}`}></div>\n                    </div>\n                  </div>\n                </Collapse>\n              </div>\n              <div\n                className={`${styles.panel}`}\n                style={{ marginBottom: '0', marginTop: '25px' }}\n              >\n                <div className={`${styles['panel-heading']}`}>\n                  <h4\n                    onClick={() => {\n                      setShowMixed((prevState) => !prevState);\n                    }}\n                    className={`${styles['panel-title']} text-center align-items-center`}\n                    style={{ color: '#FFFFFF' }}\n                  >\n                    <b>Mixed </b>\n                  </h4>\n                </div>\n                <Collapse isOpen={showMixed}>\n                  <div className={`${styles['panel-body']}`}>\n                    <div className=\"row xs-1 sm-2\">\n                      <div className={`col-sm-6 ${styles.container}`}>\n                        {GAMES.mixed.map((game) => {\n                          return (\n                            <FormGroup\n                              key={game + '_M'}\n                              className={`${styles['input-wrapper']}`}\n                            >\n                              <Input\n                                type=\"checkbox\"\n                                id={game + '_M'}\n                                checked={games[game + '_M']}\n                                onChange={changeHandler}\n                              />\n                              <Label\n                                className={`${styles['sports-label']}`}\n                                for={game + '_M'}\n                              >\n                                {game}\n                              </Label>\n                            </FormGroup>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                </Collapse>\n              </div>\n            </div>\n          </div>\n        </div>\n        <ErrorMessage message={errorMessage} />\n        <Button\n          color=\"success\"\n          style={{\n            fontWeight: 'bold', width: 'fit-content',\n          }}\n          className={styles['btn']}\n          onClick={submitHandler}\n          disabled={loading}\n        >\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction ErrorMessage({ message }) {\n  if (message === '') return null;\n  return (\n    <div className={styles['error-message']}>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default EventsEdit;\n","import { createContext } from \"react\";\n\n\nconst EventContext = createContext();\n\n\nexport {EventContext}"],"names":["GAMES","boys","girls","mixed","ErrorMessage","message","className","styles","navigate","useNavigate","token","localStorage","getItem","selectedGames","showBoys","setShowBoys","useState","showGirls","setShowGirls","showMixed","setShowMixed","loading","setLoading","errorMessage","setErrorMessage","allFalseGameChoice","forEach","game","games","setGames","prevGames","setPrevGames","baseUrl","process","REACT_APP_BASE_URL","substring","length","useEffect","axios","headers","Authorization","then","data","newGames","team","console","log","catch","err","error","changeHandler","e","target","id","setGetEventCount","React","EventContext","style","height","onClick","prevState","color","isOpen","map","type","checked","onChange","for","marginBottom","marginTop","fontWeight","width","async","changes","add","remove","push","getChanges","prev","finally","disabled","createContext"],"sourceRoot":""}