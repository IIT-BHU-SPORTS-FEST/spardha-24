{"version":3,"file":"static/js/815.ed4b4ef4.chunk.js","mappings":"wLACA,QAA+E,6BAA/E,EAA4H,8BAA5H,EAAwK,4BAAxK,EAAmN,6BAAnN,EAA8P,4BAA9P,EAAuS,2BAAvS,EAAiV,6BAAjV,EAA6X,6BAA7X,EAAya,6BAAza,EAA+lB,6BAA/lB,EAAqoB,uBAAroB,EAAqzB,6B,0CCcrzB,MA0mCA,EA1mCiB,KACf,MAAMA,EAAQC,aAAaC,QAAQ,UAC5BC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,CAC3CC,aAAa,EACbC,aAAa,EAGbC,aAAa,EACbC,aAAa,EACbC,cAAc,EACdC,cAAc,EACdC,UAAU,EACVC,UAAU,EACVC,SAAS,EACTC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,YAAY,EACZC,YAAY,EACZC,YAAY,EACZC,UAAU,EACV,iBAAiB,EACjB,iBAAiB,EACjBC,WAAW,EACXC,WAAW,EACX,aAAa,EACb,aAAa,EACbC,gBAAgB,EAChBC,UAAU,EACVC,UAAU,EACV,kBAAkB,EAClB,kBAAkB,EAClBC,aAAa,EACbC,aAAa,EACbC,cAAc,EACdC,cAAc,EACdC,iBAAiB,KAEZxB,EAAayB,IAAkB3B,EAAAA,EAAAA,UAAS,CAAC,IAEzCQ,EAAUoB,IAAe5B,EAAAA,EAAAA,UAAS,CAAC,IACnCuB,EAAaM,IAAkB7B,EAAAA,EAAAA,UAAS,CAAC,IACzCwB,EAAcM,IAAmB9B,EAAAA,EAAAA,UAAS,CAAC,IAC3CyB,EAAcM,IAAmB/B,EAAAA,EAAAA,UAAS,CAAC,IAC3CgC,EAAUC,IAAejC,EAAAA,EAAAA,UAAS,CAAC,IACnCkC,EAAUC,IAAenC,EAAAA,EAAAA,UAAS,CAAC,IACnCoC,EAAWC,IAAgBrC,EAAAA,EAAAA,UAAS,CAAC,IACrCsC,EAAWC,IAAgBvC,EAAAA,EAAAA,UAAS,CAAC,IACrCwC,EAAUC,IAAezC,EAAAA,EAAAA,UAAS,CAAC,IACnC0C,EAAUC,IAAe3C,EAAAA,EAAAA,UAAS,CAAC,IACnCiB,EAAW2B,IAAgB5C,EAAAA,EAAAA,UAAS,CAAC,IACrCkB,EAAW2B,IAAgB7C,EAAAA,EAAAA,UAAS,CAAC,IACrCI,EAAa0C,IAAkB9C,EAAAA,EAAAA,UAAS,CAAC,IACzCG,EAAa4C,IAAkB/C,EAAAA,EAAAA,UAAS,CAAC,IACzCoB,EAAU4B,IAAehD,EAAAA,EAAAA,UAAS,CAAC,IACnCqB,EAAU4B,KAAejD,EAAAA,EAAAA,UAAS,CAAC,IACnC0B,GAAiBwB,KAAsBlD,EAAAA,EAAAA,UAAS,CAAC,IACjDgB,GAAUmC,KAAenD,EAAAA,EAAAA,UAAS,CAAC,IACnCc,GAAYsC,KAAiBpD,EAAAA,EAAAA,UAAS,CAAC,IACvCe,GAAYsC,KAAiBrD,EAAAA,EAAAA,UAAS,CAAC,IACvCY,GAAY0C,KAAiBtD,EAAAA,EAAAA,UAAS,CAAC,IACvCa,GAAY0C,KAAiBvD,EAAAA,EAAAA,UAAS,CAAC,IACvCW,GAAW6C,KAAgBxD,EAAAA,EAAAA,UAAS,CAAC,IACrCsB,GAAamC,KAAkBzD,EAAAA,EAAAA,UAAS,CAAC,IACzCO,GAAUmD,KAAe1D,EAAAA,EAAAA,UAAS,CAAC,IACnCC,GAAa0D,KAAkB3D,EAAAA,EAAAA,UAAS,CAAC,IACzCS,GAASmD,KAAc5D,EAAAA,EAAAA,UAAS,CAAC,IACjCU,GAAWmD,KAAgB7D,EAAAA,EAAAA,UAAS,CAAC,IACrCM,GAAcwD,KAAmB9D,EAAAA,EAAAA,UAAS,CAAC,IAC3CK,GAAc0D,KAAmB/D,EAAAA,EAAAA,UAAS,CAAC,IAC3CmB,GAAgB6C,KAAqBhE,EAAAA,EAAAA,UAAS,CAAC,IAC/CiE,GAAUC,KAAelE,EAAAA,EAAAA,UAAS,KAClCmE,GAAWC,KAAgBpE,EAAAA,EAAAA,UAAS,KACpCqE,GAAYC,KAAiBtE,EAAAA,EAAAA,UAAS,IAEvCuE,GAAc,CAClBrE,YAAa,CAACA,EAAayB,GAE3BnB,SAAU,CAACA,EAAUoB,GACrBL,YAAa,CAACA,EAAaM,GAC3BL,aAAc,CAACA,EAAcM,GAC7BL,aAAc,CAACA,EAAcM,GAC7B,gBAAiB,CAACO,EAAWC,GAC7B,gBAAiB,CAACH,EAAWC,GAC7B,iBAAkB,CAACH,EAAUC,GAC7B,iBAAkB,CAACH,EAAUC,GAC7B,YAAa,CAACO,EAAUC,GACxB,YAAa,CAACC,EAAUC,GACxB1B,UAAW,CAACA,EAAW2B,GACvB1B,UAAW,CAACA,EAAW2B,GACvBzC,YAAa,CAACA,EAAa0C,GAC3B3C,YAAa,CAACA,EAAa4C,GAC3B3B,SAAU,CAACA,EAAU4B,GACrB3B,SAAU,CAACA,EAAU4B,IACrBvB,gBAAiB,CAACA,GAAiBwB,IACnClC,SAAU,CAACA,GAAUmC,IACrBrC,WAAY,CAACA,GAAYsC,IACzBrC,WAAY,CAACA,GAAYsC,IACzBzC,WAAY,CAACA,GAAY0C,IACzBzC,WAAY,CAACA,GAAY0C,IACzB5C,UAAW,CAACA,GAAW6C,IACvBlC,YAAa,CAACA,GAAamC,IAC3BlD,SAAU,CAACA,GAAUmD,IACrBzD,YAAa,CAACA,GAAa0D,IAC3BlD,QAAS,CAACA,GAASmD,IACnBlD,UAAW,CAACA,GAAWmD,IACvBvD,aAAc,CAACA,GAAcwD,IAC7BzD,aAAc,CAACA,GAAc0D,IAC7B5C,eAAgB,CAACA,GAAgB6C,KAG7BQ,GAAS,CACbC,OAAQ,CACN,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFC,cAAe,CACb,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFC,UAAW,CACT,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,oBAIEC,GAAUC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,oBAC5BC,EAAAA,EAAAA,YAAU,KACRC,IAAAA,IACQ,GAAEJ,WAAiB,CACvBK,QAAS,CACPC,cAAgB,SAAQvF,OAG3BwF,MAAK,IAAe,IAAd,KAAEC,GAAW,EAClB,IAAK,MAAMC,KAAQD,EAAM,CACvB,MAAME,EAAOD,EAAKE,QAAQC,QAAO,SAAUF,EAAMG,EAAKC,GACpD,OACGA,EAAQ,IAAM,EACXJ,EAAKK,KAAK,CAACF,IACXH,EAAKA,EAAKM,OAAS,GAAGD,KAAKF,KAASH,CAE3C,GAAE,IACHD,EAAKE,QAAUD,EACff,GAAYc,EAAKQ,MAAM,GAAGR,GACtBA,EAAKQ,KAAKC,SAAS,MACrB5B,IAAa6B,IACX,MAAMC,EAAW,IAAID,GAErB,OADAC,EAASL,KAAKN,GACPW,CAAP,IAEOX,EAAKQ,KAAKC,SAAS,MAC5B1B,IAAc2B,IACZ,MAAMC,EAAW,IAAID,GAErB,OADAC,EAASL,KAAKN,GACPW,CAAP,IAGF1B,IAAeyB,IACb,MAAMC,EAAW,IAAID,GAErB,OADAC,EAASL,KAAKN,GACPW,CAAP,GAGL,KAEFC,OAAOC,IACNC,QAAQC,MAAMF,EAAd,GAvCJ,GA0CC,IAEH,MAAMG,GAAgBR,IACpB9F,GAAegG,IACb,MAAMC,EAAW,IAAKD,GAEtB,OADAC,EAAU,GAAEH,MAAWE,EAAW,GAAEF,KAC7BG,CAAP,GAHF,EAOIM,GAAsBC,IAC1B,MAAMV,EAAOU,EAAEC,OAAOC,WAAW,aAAaC,MAC5CC,EAAOJ,EAAEC,OAAOG,KAClB,GAAKC,MAAMD,GAUTpC,GAAYsB,GAAM,IAAIE,IACpB,MAAMC,EAAW,IAAKD,GAEtB,OADAC,EAASW,GAAQJ,EAAEC,OAAOE,MACnBV,CAAP,QAbc,CAChB,MAAMa,EAAMC,KAAKC,MAAMC,OAAOL,GAAQ,GACpCM,EAAMD,OAAOL,GAAQ,EAEvBpC,GAAYsB,GAAM,IAAIE,IACpB,MAAMC,EAAW,IAAKD,GAEtB,OADAC,EAAST,QAAQsB,GAAKI,GAAOV,EAAEC,OAAOE,MAC/BV,CAAP,GAEH,CAMA,EAGGkB,GAAiBrB,IACrB,MAAMsB,EAAM5C,GAAYsB,GAAM,GACxBT,EAAO,CAAC,EACdA,EAAI,aAAmB+B,EAAG,aAC1B/B,EAAI,cAAoB+B,EAAG,cAC3B/B,EAAI,QAAc,GAClB,IAAK,MAAMyB,KAAOM,EAAI5B,QACpB,IAAK,MAAM0B,KAAOJ,EAChBzB,EAAI,QAAYO,KAAKsB,GAGzBjC,IAAAA,IACQ,GAAEJ,WAAgBiB,KAAST,EAAM,CACrCH,QAAS,CACPC,cAAgB,SAAQvF,OAG3BwF,MAAMiC,IACDvB,EAAKC,SAAS,MAChB5B,IAAa6B,IACX,MAAMC,EAAW,IAAID,GACrB,IAAK,IAAIsB,EAAI,EAAGA,EAAIrB,EAASJ,OAAQyB,IACnC,GAAIrB,EAASqB,GAAGxB,OAASA,EAAM,CAC7BG,EAASqB,GAAKF,EACd,KACD,CAEH,OAAOnB,CAAP,IAEOH,EAAKC,SAAS,MACvB1B,IAAc2B,IACZ,MAAMC,EAAW,IAAID,GACrB,IAAK,IAAIsB,EAAI,EAAGA,EAAIrB,EAASJ,OAAQyB,IACnC,GAAIrB,EAASqB,GAAGxB,OAASA,EAAM,CAC7BG,EAASqB,GAAKF,EACd,KACD,CAEH,OAAOnB,CAAP,IAGF1B,IAAeyB,IACb,MAAMC,EAAW,IAAID,GACrB,IAAK,IAAIsB,EAAI,EAAGA,EAAIrB,EAASJ,OAAQyB,IACnC,GAAIrB,EAASqB,GAAGxB,OAASA,EAAM,CAC7BG,EAASqB,GAAKF,EACd,KACD,CAEH,OAAOnB,CAAP,IAGJjG,GAAegG,IACb,MAAMC,EAAW,IAAKD,GAEtB,OADAC,EAAU,GAAEH,MAAWE,EAAW,GAAEF,KAC7BG,CAAP,GAHF,IAMDC,OAAOC,IACNC,QAAQC,MAAMF,GACdnG,GAAegG,IACb,MAAMC,EAAW,IAAKD,GAEtB,OADAC,EAAU,GAAEH,MAAWE,EAAW,GAAEF,KAC7BG,CAAP,GAHF,GAjDJ,EAyDF,OACE,iCACE,iBAAKsB,UAAU,cAAf,WACE,iBAAKA,UAAU,mBAAf,WACE,gBAAKA,UAAU,iBAAf,mBACA,gBAAKA,UAAU,cAAf,UACE,SAAC,KAAD,CAEEC,QAAS,KAAKC,EAAAA,GAAAA,MAAY,2BAA4B,CACpDC,SAAUD,EAAAA,GAAAA,SAAAA,cADE,EAGdE,MAAO,CAAEC,eAAgB,OAAQC,MAAO,qBAL1C,wBAWJ,mBACEN,UAAY,GAAEO,IACdC,MAAM,SACNC,YAAY,KACZC,OAAO,IAJT,WAME,2BACE,eACEV,UAAY,GAAEO,IACdH,MAAO,CAAEO,UAAW,UAFtB,yBAMA,eACEX,UAAY,GAAEO,IACdH,MAAO,CAAEO,UAAW,UAFtB,mCAMA,eACEX,UAAY,GAAEO,IACdH,MAAO,CAAEO,UAAW,UAFtB,6BAOmB,IAApBhE,GAAS2B,QACR,gBAAI8B,MAAO,CAAEO,UAAW,UAAxB,WACE,+BACA,+BACA,iCAGFhE,GAASiE,KAAI,CAAC7C,EAAM8C,KAEhB,2BACE,yBACE,uBAAI9C,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,QAE7C,0BACGP,EAAKgD,eACJ,8CACqBhD,EAAKgD,aAAc,IACrChD,EAAKiD,gBACJ,gCAAQjD,EAAKiD,cAAb,QAEF,qBAGHjD,EAAKE,QAAQgD,MAAM1B,GAAQA,EAAI0B,MAAMC,GAAMA,EAAE5C,aAC5C,wBAOE,+CAGHP,EAAKE,QACHC,QAAO,CAACiD,EAAMC,IAAQ,IAClBD,EAAKE,QAAQH,GAAMA,EAAE5C,YACrB8C,EAAIC,QAAQH,GAAMA,EAAE5C,YAExBgD,MACC,EACAvD,EAAKE,QAAQC,QAAO,CAACiD,EAAMC,IAAQ,IAC9BD,EAAKE,QAAQH,GAAMA,EAAE5C,YACrB8C,EAAIC,QAAQH,GAAMA,EAAE5C,YACtBA,OAAS,GAEbsC,KAAI,CAACW,EAAQV,KACL,4BAAiBU,EAAjB,OAAWV,KAKR,IAHb9C,EAAKE,QAAQC,QAAO,CAACiD,EAAMC,IAAQ,IAC/BD,EAAKE,QAAQH,GAAMA,EAAE5C,YACrB8C,EAAIC,QAAQH,GAAMA,EAAE5C,YACtBA,SACC,0BAEIP,EAAKE,QACFC,QAAO,CAACiD,EAAMC,IAAQ,IAClBD,EAAKE,QAAQH,GAAMA,EAAE5C,YACrB8C,EAAIC,QAAQH,GAAMA,EAAE5C,YAExBgD,OAAO,GAAG,SAKvB,2BACE,SAAC,KAAD,CACEtB,UAAY,GAAEO,IACd,cAAaxC,EAAKQ,KAClB0B,QAAS,IAAMlB,GAAahB,EAAKQ,MAHnC,+BAOA,UAAC,KAAD,CACEiD,OAAQhJ,EAAY,GAAEuF,EAAKQ,QAC3BkD,OAAQ,IAAM1C,GAAahB,EAAKQ,MAChCmD,UAAQ,EACRC,YAAU,EACVC,UAAQ,EACRC,KAAK,KANP,WAQE,UAAC,KAAD,CACE7B,UAAY,GAAEO,KAA0BA,IAD1C,uBAGaxC,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,GAHpD,KAIGP,EAAKQ,KAAKC,SAAS,MAAQ,OAC3BT,EAAKQ,KAAKC,SAAS,MAAQ,QAC3BT,EAAKQ,KAAKC,SAAS,MAAQ,QAN9B,QAQA,UAAC,KAAD,CAAWwB,UAAY,GAAEO,IAAzB,WACE,UAAC,KAAD,CACED,MAAM,UACNF,MAAO,CACL0B,SAAU,OACVC,WAAY,OACZC,cAAe,QALnB,UAQG,IARH,yDAWA,mBACExB,MAAM,SACNyB,YAAY,KACZjC,UAAY,GAAEO,IAHhB,UAKG,CAAC,YAAa,UAAU2B,SACvBnE,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,MAErC,2BACE,yBACE,gCAEF,eAAI6D,QAAQ,IAAInC,UAAU,0BAA1B,UACE,4CACmB,IAEf,WADDjC,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,IAEtC,kCAEA,yCAMX,CAAC,YAAa,gBAAiB,UAAU4D,SACxCnE,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,MAErC,0BACG,KACD,yBACE,gCAEF,eAAI6D,QAAQ,IAAInC,UAAU,0BAA1B,UACE,uFAOR,0BACG,CAAC,YAAa,gBAAiB,UAAUkC,SACxCnE,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,MAErC,yBACE,uBAEIpB,GACAa,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,IACrC,QAKZ,yBACE,kBACE8D,KAAK,OACLpC,UAAU,eACVqC,YAAY,wBACZ,YAAWtE,EAAKQ,KAChBc,KAAK,eACLD,MACEnC,GAAa,GAAEc,EAAKQ,QAAQ,GAA5B,aAEF+D,SAAUtD,QAGd,yBACE,kBACEoD,KAAK,MACLpC,UAAU,eACV,YAAWjC,EAAKQ,KAChBc,KAAK,gBACLgD,YAAY,6BACZjD,MACEnC,GAAa,GAAEc,EAAKQ,QAAQ,GAA5B,cAEF+D,SAAUtD,cAKlB,kBACEwB,MAAM,SACNC,YAAY,KACZT,UAAY,GAAEO,IAHhB,SAKGxC,EAAKE,QAAQ2C,KAAI,CAACrB,EAAKgD,KAEpB,0BACG,CACC,YACA,gBACA,UACAL,SACAnE,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,MAErC,yBACE,uBAEIpB,GACAa,EAAKQ,KAAKuC,OACR,EACA/C,EAAKQ,KAAKD,OAAS,IAEnBiE,EAAW,OAKtBhD,EAAIqB,KAAI,CAACjB,EAAK6C,KAEX,yBACE,kBACEJ,KAAK,OACLpC,UAAU,eACVqC,YAAc,UAAS,EAAIE,EAAWC,EAAW,IAEjD,YAAWzE,EAAKQ,KAChBc,KAAO,GAAE,EAAIkD,EAAWC,IACxBpD,MACEnC,GAAa,GAAEc,EAAKQ,QAAQ,GAA5B,QAEEgE,GAAUC,GAEdF,SAAUtD,oBAU5B,UAAC,KAAD,CAAagB,UAAY,GAAEO,IAA3B,WACE,SAAC,KAAD,CACEP,UAAY,GAAEO,IACdN,QAAS,IAAMlB,GAAahB,EAAKQ,MAFnC,qBAMA,SAAC,KAAD,CACEyB,UAAY,GAAEO,IACdN,QAAS,KACPL,GAAc7B,EAAKQ,KAAnB,EAHJ,+BA3OCsC,YA4PnB,mBACA,iBAAKb,UAAU,cAAf,WACE,iBAAKA,UAAU,mBAAf,WACE,gBAAKA,UAAU,iBAAf,oBACA,gBAAKA,UAAU,cAAf,UACE,SAAC,KAAD,CAEEC,QAAS,KAAKC,EAAAA,GAAAA,MAAY,2BAA4B,CACpDC,SAAUD,EAAAA,GAAAA,SAAAA,cADE,EAGdE,MAAO,CAAEC,eAAgB,OAAQC,MAAO,qBAL1C,wBAYJ,mBACEN,UAAY,GAAEO,IACdC,MAAM,SACNC,YAAY,KACZC,OAAO,IAJT,WAME,2BACE,eACEV,UAAY,GAAEO,IACdH,MAAO,CAAEO,UAAW,UAFtB,yBAMA,eACEX,UAAY,GAAEO,IACdH,MAAO,CAAEO,UAAW,UAFtB,mCAMA,eACEX,UAAY,GAAEO,IACdH,MAAO,CAAEO,UAAW,UAFtB,6BAOoB,IAArB9D,GAAUyB,QACT,gBAAI8B,MAAO,CAAEO,UAAW,UAAxB,WACE,+BACA,+BACA,iCAGF9D,GAAU+D,KAAI,CAAC7C,EAAM8C,KAEjB,2BACE,yBACE,uBAAI9C,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,QAE7C,0BACGP,EAAKgD,eACJ,8CACqBhD,EAAKgD,aAAc,IACrChD,EAAKiD,gBACJ,gCAAQjD,EAAKiD,cAAb,QAEF,qBAGHjD,EAAKE,QAAQgD,MAAM1B,GAAQA,EAAI0B,MAAMC,GAAMA,EAAE5C,aAC5C,wBAOE,+CAGHP,EAAKE,QACHC,QAAO,CAACiD,EAAMC,IAAQ,IAClBD,EAAKE,QAAQH,GAAMA,EAAE5C,YACrB8C,EAAIC,QAAQH,GAAMA,EAAE5C,YAExBgD,MACC,EACAvD,EAAKE,QAAQC,QAAO,CAACiD,EAAMC,IAAQ,IAC9BD,EAAKE,QAAQH,GAAMA,EAAE5C,YACrB8C,EAAIC,QAAQH,GAAMA,EAAE5C,YACtBA,OAAS,GAEbsC,KAAI,CAACW,EAAQV,KACL,4BAAiBU,EAAjB,OAAWV,KAKR,IAHb9C,EAAKE,QAAQC,QAAO,CAACiD,EAAMC,IAAQ,IAC/BD,EAAKE,QAAQH,GAAMA,EAAE5C,YACrB8C,EAAIC,QAAQH,GAAMA,EAAE5C,YACtBA,SACC,0BAEIP,EAAKE,QACFC,QAAO,CAACiD,EAAMC,IAAQ,IAClBD,EAAKE,QAAQH,GAAMA,EAAE5C,YACrB8C,EAAIC,QAAQH,GAAMA,EAAE5C,YAExBgD,OAAO,GAAG,SAKvB,2BACE,SAAC,KAAD,CACEtB,UAAY,GAAEO,IACd,cAAaxC,EAAKQ,KAClB0B,QAAS,IAAMlB,GAAahB,EAAKQ,MAHnC,+BAOA,UAAC,KAAD,CACEiD,OAAQhJ,EAAY,GAAEuF,EAAKQ,QAC3BkD,OAAQ,IAAM1C,GAAahB,EAAKQ,MAChCmD,UAAQ,EACRC,YAAU,EACVC,UAAQ,EACRC,KAAK,KANP,WAQE,UAAC,KAAD,CACE7B,UAAY,GAAEO,KAA0BA,IAD1C,uBAGaxC,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,GAHpD,KAIGP,EAAKQ,KAAKC,SAAS,MAAQ,OAC3BT,EAAKQ,KAAKC,SAAS,MAAQ,QAC3BT,EAAKQ,KAAKC,SAAS,MAAQ,QAN9B,QAQA,UAAC,KAAD,CAAWwB,UAAY,GAAEO,IAAzB,WACE,UAAC,KAAD,CACED,MAAM,UACNF,MAAO,CACL0B,SAAU,OACVC,WAAY,OACZC,cAAe,QALnB,UAQG,IARH,yDAYA,mBACExB,MAAM,SACNyB,YAAY,KACZjC,UAAY,GAAEO,IAHhB,UAKG,CAAC,YAAa,UAAU2B,SACvBnE,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,MAErC,2BACE,yBACE,gCAEF,eAAI6D,QAAQ,IAAInC,UAAU,0BAA1B,UACE,4CACmB,IAEf,WADDjC,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,IAEtC,kCAEA,yCAMX,CAAC,YAAa,gBAAiB,UAAU4D,SACxCnE,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,MAErC,0BACG,KACD,yBACE,gCAEF,eAAI6D,QAAQ,IAAInC,UAAU,0BAA1B,UACE,uFAOR,0BACG,CAAC,YAAa,UAAUkC,SACvBnE,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,MAErC,yBACE,uBAEIpB,GACAa,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,IACrC,QAKZ,yBACE,kBACE8D,KAAK,OACLpC,UAAU,eACVqC,YAAY,wBACZ,YAAWtE,EAAKQ,KAChBc,KAAK,eACLD,MACEnC,GAAa,GAAEc,EAAKQ,QAAQ,GAA5B,aAEF+D,SAAUtD,QAGd,yBACE,kBACEoD,KAAK,MACLpC,UAAU,eACV,YAAWjC,EAAKQ,KAChBc,KAAK,gBACLgD,YAAY,6BACZjD,MACEnC,GAAa,GAAEc,EAAKQ,QAAQ,GAA5B,cAEF+D,SAAUtD,cAKlB,kBACEwB,MAAM,SACNC,YAAY,KACZT,UAAY,GAAEO,IAHhB,SAKGxC,EAAKE,QAAQ2C,KAAI,CAACrB,EAAKgD,KAEpB,0BACG,CAAC,YAAa,UAAUL,SACvBnE,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,MAErC,yBACE,uBAEIpB,GACAa,EAAKQ,KAAKuC,OACR,EACA/C,EAAKQ,KAAKD,OAAS,IAEnBiE,EAAW,OAKtBhD,EAAIqB,KAAI,CAACjB,EAAK6C,KAEX,yBACE,kBACEJ,KAAK,OACLpC,UAAU,eACVqC,YAAc,UAAS,EAAIE,EAAWC,EAAW,IAEjD,YAAWzE,EAAKQ,KAChBc,KAAO,GAAE,EAAIkD,EAAWC,IACxBpD,MACEnC,GAAa,GAAEc,EAAKQ,QAAQ,GAA5B,QAEEgE,GAAUC,GAEdF,SAAUtD,oBAU5B,UAAC,KAAD,CAAagB,UAAY,GAAEO,IAA3B,WACE,SAAC,KAAD,CACEP,UAAY,GAAEO,IACdN,QAAS,IAAMlB,GAAahB,EAAKQ,MAFnC,qBAMA,SAAC,KAAD,CACEyB,UAAY,GAAEO,IACdN,QAAS,KACPL,GAAc7B,EAAKQ,KAAnB,EAHJ,+BAxOCsC,YAyPnB,mBACA,iBAAKb,UAAU,cAAf,WACE,iBAAKA,UAAU,mBAAf,WACE,gBAAKA,UAAU,iBAAf,oBACA,gBAAKA,UAAU,cAAf,UACE,SAAC,KAAD,CAEEC,QAAS,KAAKC,EAAAA,GAAAA,MAAY,2BAA4B,CACpDC,SAAUD,EAAAA,GAAAA,SAAAA,cADE,EAGdE,MAAO,CAAEC,eAAgB,OAAQC,MAAO,qBAL1C,wBAYJ,mBACEN,UAAY,GAAEO,IACdC,MAAM,SACNC,YAAY,KACZC,OAAO,IAJT,WAME,2BACE,eACEV,UAAY,GAAEO,IACdH,MAAO,CAAEO,UAAW,UAFtB,yBAMA,eACEX,UAAY,GAAEO,IACdH,MAAO,CAAEO,UAAW,UAFtB,mCAMA,eACEX,UAAY,GAAEO,IACdH,MAAO,CAAEO,UAAW,UAFtB,6BAOqB,IAAtB5D,GAAWuB,QACV,gBAAI8B,MAAO,CAAEO,UAAW,UAAxB,WACE,+BACA,+BACA,iCAGF5D,GAAW6D,KAAI,CAAC7C,EAAM8C,KAElB,2BACE,yBACE,uBAAI9C,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,QAE7C,0BACGP,EAAKgD,eACJ,8CACqBhD,EAAKgD,aAAc,IACrChD,EAAKiD,gBACJ,gCAAQjD,EAAKiD,cAAb,QAEF,qBAGHjD,EAAKE,QAAQgD,MAAM1B,GAAQA,EAAI0B,MAAMC,GAAMA,EAAE5C,aAC5C,wBAOE,+CAGHP,EAAKE,QACHC,QAAO,CAACiD,EAAMC,IAAQ,IAClBD,EAAKE,QAAQH,GAAMA,EAAE5C,YACrB8C,EAAIC,QAAQH,GAAMA,EAAE5C,YAExBgD,MACC,EACAvD,EAAKE,QAAQC,QAAO,CAACiD,EAAMC,IAAQ,IAC9BD,EAAKE,QAAQH,GAAMA,EAAE5C,YACrB8C,EAAIC,QAAQH,GAAMA,EAAE5C,YACtBA,OAAS,GAEbsC,KAAI,CAACW,EAAQV,KACL,4BAAiBU,EAAjB,OAAWV,KAKR,IAHb9C,EAAKE,QAAQC,QAAO,CAACiD,EAAMC,IAAQ,IAC/BD,EAAKE,QAAQH,GAAMA,EAAE5C,YACrB8C,EAAIC,QAAQH,GAAMA,EAAE5C,YACtBA,SACC,0BAEIP,EAAKE,QACFC,QAAO,CAACiD,EAAMC,IAAQ,IAClBD,EAAKE,QAAQH,GAAMA,EAAE5C,YACrB8C,EAAIC,QAAQH,GAAMA,EAAE5C,YAExBgD,OAAO,GAAG,SAKvB,2BACE,SAAC,KAAD,CACEtB,UAAY,GAAEO,IACd,cAAaxC,EAAKQ,KAClB0B,QAAS,IAAMlB,GAAahB,EAAKQ,MAHnC,+BAOA,UAAC,KAAD,CACEiD,OAAQhJ,EAAY,GAAEuF,EAAKQ,QAC3BkD,OAAQ,IAAM1C,GAAahB,EAAKQ,MAChCmD,UAAQ,EACRC,YAAU,EACVC,UAAQ,EACRC,KAAK,KANP,WAQE,UAAC,KAAD,CACE7B,UAAY,GAAEO,KAA0BA,IAD1C,uBAGaxC,EAAKQ,KAAKuC,OAAO,EAAG/C,EAAKQ,KAAKD,OAAS,GAHpD,KAIGP,EAAKQ,KAAKC,SAAS,MAAQ,OAC3BT,EAAKQ,KAAKC,SAAS,MAAQ,QAC3BT,EAAKQ,KAAKC,SAAS,MAAQ,QAN9B,QAQA,UAAC,KAAD,CAAWwB,UAAY,GAAEO,IAAzB,WACE,gBAAKH,MAAO,CAAEqC,gBAAiB,OAA/B,UACE,UAAC,KAAD,CAEErC,MAAO,CACL0B,SAAU,OACVC,WAAY,OACZC,cAAe,OACfS,gBAAiB,OANrB,UAUG,IAVH,2DAaF,kBAAOjC,MAAM,SAASyB,YAAY,KAAlC,UACE,2BACE,yBACE,kBACEG,KAAK,OACLhC,MAAO,CAAEM,OAAQ,qBACjBV,UAAY,GAAEO,IACd8B,YAAY,wBACZ,YAAWtE,EAAKQ,KAChBc,KAAK,eACLD,MACEnC,GAAa,GAAEc,EAAKQ,QAAQ,GAA5B,aAEF+D,SAAUtD,QAGd,yBACE,kBACEoD,KAAK,MACLpC,UAAU,eACV,YAAWjC,EAAKQ,KAChBc,KAAK,gBACLgD,YAAY,6BACZjD,MACEnC,GAAa,GAAEc,EAAKQ,QAAQ,GAA5B,cAEF+D,SAAUtD,aAKlB,kBAAOwB,MAAM,SAASC,YAAY,KAAlC,SACG1C,EAAKE,QAAQ2C,KAAI,CAACrB,EAAKgD,KAEpB,wBACGhD,EAAIqB,KAAI,CAACjB,EAAK6C,KAEX,yBACE,kBACEJ,KAAK,OACLpC,UAAU,eACVqC,YAAc,UAAS,EAAIE,EAAWC,EAAW,IAEjD,YAAWzE,EAAKQ,KAChBc,KAAO,GAAE,EAAIkD,EAAWC,IACxBpD,MACEnC,GAAa,GAAEc,EAAKQ,QAAQ,GAA5B,QAEEgE,GAAUC,GAEdpC,MAAO,CAAEM,OAAQ,qBACjB4B,SAAUtD,mBAU5B,UAAC,KAAD,CAAagB,UAAY,GAAEO,IAA3B,WACE,SAAC,KAAD,CACEP,UAAY,GAAEO,IACdN,QAAS,IAAMlB,GAAahB,EAAKQ,MAFnC,qBAMA,SAAC,KAAD,CACEyB,UAAY,GAAEO,IACdN,QAAS,KACPL,GAAc7B,EAAKQ,KAAnB,EAHJ,+BAnKCsC,YAmLnB,oBAp0BJ,ECtHF,EAjLqB,KACnB,MAAO6B,EAAaC,IAAkBjK,EAAAA,EAAAA,UAAS,CAC7CkK,YAAa,IACbC,aAAc,IACdC,YAAa,IACbC,YAAa,IACbC,mBAAoB,IACpBC,uBAAwB,IACxBC,mBAAoB,IACpBC,wBAAyB,MAErB9K,EAAQC,aAAaC,QAAQ,SAC7B+E,EAAUC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,mBAoB5B,OAlBAC,EAAAA,EAAAA,YAAU,KACRC,IAAAA,IACQ,GAAEJ,6BAAoC,CAC1CK,QAAS,CACPC,cAAgB,SAAQvF,OAG3BwF,MAAMiC,IAEL6C,EAAe7C,EAAIhC,KAAnB,IAGDa,OAAOC,IACNC,QAAQuE,IAAI,SAAUxE,EAAtB,GAZJ,GAeC,KAGD,gBAAKoB,UAAU,0BAAf,UACE,gBAAKA,UAAU,qBAAf,UACE,gBAAKA,UAAU,gCAAf,UACE,gBAAKA,UAAU,gBAAf,UAUE,gBAAKA,UAAU,eAAf,UACE,2BACE,mBACA,iBAAKA,UAAU,cAAf,WACE,iBAAKA,UAAU,aAAf,WACE,gBAAKA,UAAU,iBAAf,iCACA,gBAAKA,UAAU,cAAf,UACE,SAAC,KAAD,CAEEC,QAAS,KAAKC,EAAAA,GAAAA,MAAY,2BAA4B,CACpDC,SAAUD,EAAAA,GAAAA,SAAAA,cADE,EAGdE,MAAO,CAAEC,eAAgB,OAAQC,MAAO,qBAL1C,wBAYJ,mBACEE,MAAM,SACNC,YAAY,KACZT,UAAU,eAHZ,WAKE,2BACE,gBAAIA,UAAU,cAAcI,MAAO,CAAEO,UAAW,QAAhD,WACE,gDAA4B,QAE9B,eAAIX,UAAU,eAAd,SACG0C,EAAYE,kBAGjB,2BACE,gBAAI5C,UAAU,cAAcI,MAAO,CAAEO,UAAW,QAAhD,WACE,iDAA6B,QAE/B,eAAIX,UAAU,eAAd,SACG0C,EAAYG,mBAIjB,2BACE,gBACE7C,UAAU,cACVI,MAAO,CAAEO,UAAW,OAAQ0C,WAAY,OAF1C,WAIE,uFAGK,QAEP,eAAIrD,UAAU,eAAd,SACG0C,EAAYO,6BAGjB,2BACE,gBACEjD,UAAU,cACVI,MAAO,CAAEO,UAAW,OAAQ0C,WAAY,OAF1C,WAIE,uBACI,8DACC,QAEP,eAAIrD,UAAU,eAAd,SACG0C,EAAYQ,yBAGjB,2BACE,gBACElD,UAAU,cACVI,MAAO,CAAEO,UAAW,OAAQ0C,WAAY,OAF1C,WAIE,wFAGK,QAEP,eAAIrD,UAAU,eAAd,SACG0C,EAAYS,8BAGjB,2BACE,gBACEnD,UAAU,cACVI,MAAO,CAAEO,UAAW,OAAQ0C,WAAY,OAF1C,WAIE,0DAAsC,QAExC,eAAIrD,UAAU,eAAd,SACG0C,EAAYK,kBAGjB,2BACE,gBACE/C,UAAU,cACVI,MAAO,CAAEO,UAAW,OAAQ0C,WAAY,OAF1C,WAIE,+DAA2C,QAE7C,eAAIrD,UAAU,eAAd,SACG0C,EAAYM,+BAKrB,mBACA,mBAcA,SAACM,EAAD,gBAvId,C","sources":["webpack://spardha23/./src/components/DashBoard/Registration/Events/Events.module.css?518f","components/DashBoard/Registration/Events/Events.js","components/DashBoard/Registration/Registration.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"events-heading\":\"Events_events-heading__zqrqS\",\"events-table\":\"Events_events-table__ZnuDA\",\"middle-column\":\"Events_middle-column__cnNRe\",\"left-column\":\"Events_left-column__iwSTX\",\"right-column\":\"Events_right-column__ePkhI\",\"modal-table\":\"Events_modal-table__dQ41t\",\"modal-body\":\"Events_modal-body__8gYUd\",\"register-now\":\"Events_register-now__7JNIy\",\"modal-header\":\"Events_modal-header__ICAiJ\",\"login-header\":\"Events_login-header__fybga\",\"navbar-right\":\"Events_navbar-right__morom\",\"nav-tabs\":\"Events_nav-tabs__Vpf+j\",\"active\":\"Events_active__JS7re\",\"nav\":\"Events_nav__+muWy\",\"modal-footer\":\"Events_modal-footer__JGY8C\",\"cancel\":\"Events_cancel__zpRY3\",\"alert-warning\":\"Events_alert-warning__P9s7A\",\"modal\":\"Events_modal__41OE8\",\"close\":\"Events_close__QL0R+\",\"search\":\"Events_search__FHzia\",\"form-control\":\"Events_form-control__IMpa8\"};","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalFooter,\n  Alert,\n} from 'reactstrap';\nimport styles from './Events.module.css';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst EventsDb = () => {\n  const token = localStorage.getItem('token');\n  const [showModals, setShowModals] = useState({\n    Athletics_B: false,\n    Athletics_G: false,\n    // Aquatics_B: false,\n    // Aquatics_G: false,\n    Badminton_B: false,\n    Badminton_G: false,\n    Basketball_B: false,\n    Basketball_G: false,\n    Boxing_B: false,\n    Boxing_G: false,\n    Chess_M: false,\n    Cycling_M: false,\n    Cricket_B: false,\n    Football_B: false,\n    Football_G: false,\n    Handball_B: false,\n    Handball_G: false,\n    Hockey_B: false,\n    'Lawn Tennis_B': false,\n    'Lawn Tennis_G': false,\n    Kabaddi_B: false,\n    Kabaddi_G: false,\n    'Kho-Kho_B': false,\n    'Kho-Kho_G': false,\n    Powerlifting_B: false,\n    Squash_B: false,\n    Squash_G: false,\n    'Table Tennis_B': false,\n    'Table Tennis_G': false,\n    Taekwondo_B: false,\n    Taekwondo_G: false,\n    Volleyball_B: false,\n    Volleyball_G: false,\n    Weightlifting_B: false,\n  });\n  const [Athletics_G, setAthletics_G] = useState({});\n  // const [Aquatics_G, setAquatics_G] = useState({});\n  const [Boxing_G, setBoxing_G] = useState({});\n  const [Taekwondo_G, setTaekwondo_G] = useState({});\n  const [Volleyball_B, setVolleyball_B] = useState({});\n  const [Volleyball_G, setVolleyball_G] = useState({});\n  const [Tennis_G, setTennis_G] = useState({});\n  const [Tennis_B, setTennis_B] = useState({});\n  const [LTennis_B, setLTennis_B] = useState({});\n  const [LTennis_G, setLTennis_G] = useState({});\n  const [KhoKho_G, setKhoKho_G] = useState({});\n  const [KhoKho_B, setKhoKho_B] = useState({});\n  const [Kabaddi_B, setKabaddi_B] = useState({});\n  const [Kabaddi_G, setKabaddi_G] = useState({});\n  const [Badminton_G, setBadminton_G] = useState({});\n  const [Badminton_B, setBadminton_B] = useState({});\n  const [Squash_B, setSquash_B] = useState({});\n  const [Squash_G, setSquash_G] = useState({});\n  const [Weightlifting_B, setWeightlifting_B] = useState({});\n  const [Hockey_B, setHockey_B] = useState({});\n  const [Handball_B, setHandball_B] = useState({});\n  const [Handball_G, setHandball_G] = useState({});\n  const [Football_B, setFootball_B] = useState({});\n  const [Football_G, setFootball_G] = useState({});\n  const [Cricket_B, setCricket_B] = useState({});\n  const [Taekwondo_B, setTaekwondo_B] = useState({});\n  const [Boxing_B, setBoxing_B] = useState({});\n  const [Athletics_B, setAthletics_B] = useState({});\n  const [Chess_M, setChess_M] = useState({});\n  const [Cycling_M, setCycling_M] = useState({});\n  const [Basketball_G, setBasketball_G] = useState({});\n  const [Basketball_B, setBasketball_B] = useState({});\n  const [Powerlifting_B, setPowerlifting_B] = useState({});\n  const [boyTeams, setBoyTeams] = useState([]);\n  const [girlTeams, setGirlTeams] = useState([]);\n  const [mixedTeams, setMixedTeams] = useState([]);\n\n  const inputFields = {\n    Athletics_G: [Athletics_G, setAthletics_G],\n    // Aquatics_G: [Aquatics_G, setAquatics_G],\n    Boxing_G: [Boxing_G, setBoxing_G],\n    Taekwondo_G: [Taekwondo_G, setTaekwondo_G],\n    Volleyball_B: [Volleyball_B, setVolleyball_B],\n    Volleyball_G: [Volleyball_G, setVolleyball_G],\n    'Lawn Tennis_G': [LTennis_G, setLTennis_G],\n    'Lawn Tennis_B': [LTennis_B, setLTennis_B],\n    'Table Tennis_B': [Tennis_B, setTennis_B],\n    'Table Tennis_G': [Tennis_G, setTennis_G],\n    'Kho-Kho_G': [KhoKho_G, setKhoKho_G],\n    'Kho-Kho_B': [KhoKho_B, setKhoKho_B],\n    Kabaddi_B: [Kabaddi_B, setKabaddi_B],\n    Kabaddi_G: [Kabaddi_G, setKabaddi_G],\n    Badminton_G: [Badminton_G, setBadminton_G],\n    Badminton_B: [Badminton_B, setBadminton_B],\n    Squash_B: [Squash_B, setSquash_B],\n    Squash_G: [Squash_G, setSquash_G],\n    Weightlifting_B: [Weightlifting_B, setWeightlifting_B],\n    Hockey_B: [Hockey_B, setHockey_B],\n    Handball_B: [Handball_B, setHandball_B],\n    Handball_G: [Handball_G, setHandball_G],\n    Football_B: [Football_B, setFootball_B],\n    Football_G: [Football_G, setFootball_G],\n    Cricket_B: [Cricket_B, setCricket_B],\n    Taekwondo_B: [Taekwondo_B, setTaekwondo_B],\n    Boxing_B: [Boxing_B, setBoxing_B],\n    Athletics_B: [Athletics_B, setAthletics_B],\n    Chess_M: [Chess_M, setChess_M],\n    Cycling_M: [Cycling_M, setCycling_M],\n    Basketball_G: [Basketball_G, setBasketball_G],\n    Basketball_B: [Basketball_B, setBasketball_B],\n    Powerlifting_B: [Powerlifting_B, setPowerlifting_B],\n  };\n\n  const labels = {\n    Boxing: [\n      'Leader info:    ',\n      '46kg-49kg:      ',\n      '49kg-52kg:      ',\n      '52kg-56kg:      ',\n      '56kg-60kg:      ',\n      '60kg-64kg:      ',\n      '64kg-69kg:      ',\n      '69kg-75kg:      ',\n      '75kg-81kg:      ',\n      '81kg-91kg:      ',\n      '91kg and above: ',\n    ],\n    Weightlifting: [\n      'Leader info:    ',\n      'Below 56kg:     ',\n      '56kg-62kg:      ',\n      '62kg-69kg:      ',\n      '69kg-77kg:      ',\n      '77kg-85kg:      ',\n    ],\n    Taekwondo: [\n      'Leader info:    ',\n      'Below 54kg:    ',\n      '54kg-58kg:     ',\n      '58kg-63kg:     ',\n      '63kg-67kg:     ',\n      '67kg-72kg:     ',\n      '72kg-78kg:     ',\n      'Above 78kg:    ',\n      'Heavy :        ',\n    ],\n  };\n\n  const baseUrl = process.env.REACT_APP_BASE_URL;\n  useEffect(() => {\n    axios\n      .get(`${baseUrl}teams/`, {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      .then(({ data }) => {\n        for (const team of data) {\n          const rows = team.players.reduce(function (rows, key, index) {\n            return (\n              (index % 2 === 0\n                ? rows.push([key])\n                : rows[rows.length - 1].push(key)) && rows\n            );\n          }, []);\n          team.players = rows;\n          inputFields[team.game][1](team);\n          if (team.game.endsWith('_B')) {\n            setBoyTeams((prevState) => {\n              const newState = [...prevState];\n              newState.push(team);\n              return newState;\n            });\n          } else if (team.game.endsWith('_G')) {\n            setGirlTeams((prevState) => {\n              const newState = [...prevState];\n              newState.push(team);\n              return newState;\n            });\n          } else {\n            setMixedTeams((prevState) => {\n              const newState = [...prevState];\n              newState.push(team);\n              return newState;\n            });\n          }\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const clickHandler = (game) => {\n    setShowModals((prevState) => {\n      const newState = { ...prevState };\n      newState[`${game}`] = !prevState[`${game}`];\n      return newState;\n    });\n  };\n\n  const inputChangeHandler = (e) => {\n    const game = e.target.attributes['data-game'].value,\n      name = e.target.name;\n    if (!isNaN(name)) {\n      const row = Math.floor(Number(name) / 2),\n        col = Number(name) % 2;\n      // console.log(row, col);\n      inputFields[game][1]((prevState) => {\n        const newState = { ...prevState };\n        newState.players[row][col] = e.target.value;\n        return newState;\n      });\n    } else {\n      inputFields[game][1]((prevState) => {\n        const newState = { ...prevState };\n        newState[name] = e.target.value;\n        return newState;\n      });\n    }\n  };\n\n  const submitHandler = (game) => {\n    const obj = inputFields[game][0];\n    const data = {};\n    data['captain_name'] = obj['captain_name'];\n    data['captain_phone'] = obj['captain_phone'];\n    data['players'] = [];\n    for (const row of obj.players) {\n      for (const col of row) {\n        data['players'].push(col);\n      }\n    }\n    axios\n      .put(`${baseUrl}teams/${game}/`, data, {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      .then((res) => {\n        if (game.endsWith('_B')) {\n          setBoyTeams((prevState) => {\n            const newState = [...prevState];\n            for (let i = 0; i < newState.length; i++) {\n              if (newState[i].game === game) {\n                newState[i] = obj;\n                break;\n              }\n            }\n            return newState;\n          });\n        } else if (game.endsWith('_G')) {\n          setGirlTeams((prevState) => {\n            const newState = [...prevState];\n            for (let i = 0; i < newState.length; i++) {\n              if (newState[i].game === game) {\n                newState[i] = obj;\n                break;\n              }\n            }\n            return newState;\n          });\n        } else {\n          setMixedTeams((prevState) => {\n            const newState = [...prevState];\n            for (let i = 0; i < newState.length; i++) {\n              if (newState[i].game === game) {\n                newState[i] = obj;\n                break;\n              }\n            }\n            return newState;\n          });\n        }\n        setShowModals((prevState) => {\n          const newState = { ...prevState };\n          newState[`${game}`] = !prevState[`${game}`];\n          return newState;\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        setShowModals((prevState) => {\n          const newState = { ...prevState };\n          newState[`${game}`] = !prevState[`${game}`];\n          return newState;\n        });\n      });\n  };\n\n  return (\n    <>\n      <div className='sub_details'>\n        <div className='heading-register'>\n          <div className=\"events-heading\">BOYS</div>\n          <div className=\"edit_button\">\n            <Link\n              // to=\"/dashboard/events\"\n              onClick={()=>{toast.error('Registrations are closed', {\n                position: toast.POSITION.BOTTOM_RIGHT,\n              });}}\n              style={{ textDecoration: 'none', color: 'rgba(2, 0, 33, 1)' }}\n            >\n              Edit\n            </Link>\n          </div>\n        </div>\n        <table\n          className={`${styles['events-table']}`}\n          align=\"center\"\n          cellpadding=\"20\"\n          border=\"1\"\n        >\n          <tr>\n            <th\n              className={`${styles['left-column']}`}\n              style={{ textAlign: 'center' }}\n            >\n              Event Name\n            </th>\n            <th\n              className={`${styles['middle-column']}`}\n              style={{ textAlign: 'center' }}\n            >\n              Players Name / Count\n            </th>\n            <th\n              className={`${styles['right-column']}`}\n              style={{ textAlign: 'center' }}\n            >\n              Edit Players\n            </th>\n          </tr>\n          {boyTeams.length === 0 ? (\n            <tr style={{ textAlign: 'center' }}>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n            </tr>\n          ) : (\n            boyTeams.map((team, ind) => {\n              return (\n                <tr key={ind}>\n                  <td>\n                    <b>{team.game.substr(0, team.game.length - 2)}</b>\n                  </td>\n                  <td>\n                    {team.captain_name && (\n                      <b>\n                        Captain / Leader: {team.captain_name}{' '}\n                        {team.captain_phone && (\n                          <span>({team.captain_phone})</span>\n                        )}\n                        <br />\n                      </b>\n                    )}\n                    {team.players.some((row) => row.some((s) => s.length)) && (\n                      <b>\n                        {/* {team.game.substr(0, team.game.length - 2) ===\n                      'Athletics' ? (\n                        <span>Total Number of Boys: </span>\n                      ) : (\n                        <span>Players Name: </span>\n                      )} */}\n                        <span>Players Name: </span>\n                      </b>\n                    )}\n                    {team.players\n                      .reduce((prev, cur) => [\n                        ...prev.filter((s) => s.length),\n                        ...cur.filter((s) => s.length),\n                      ])\n                      .slice(\n                        0,\n                        team.players.reduce((prev, cur) => [\n                          ...prev.filter((s) => s.length),\n                          ...cur.filter((s) => s.length),\n                        ]).length - 1\n                      )\n                      .map((player, ind) => {\n                        return <span key={ind}>{player}, </span>;\n                      })}\n                    {team.players.reduce((prev, cur) => [\n                      ...prev.filter((s) => s.length),\n                      ...cur.filter((s) => s.length),\n                    ]).length !== 0 && (\n                        <span>\n                          {\n                            team.players\n                              .reduce((prev, cur) => [\n                                ...prev.filter((s) => s.length),\n                                ...cur.filter((s) => s.length),\n                              ])\n                              .slice(-1)[0]\n                          }\n                        </span>\n                      )}\n                  </td>\n                  <td>\n                    <Button\n                      className={`${styles['register-now']}`}\n                      data-toggle={team.game}\n                      onClick={() => clickHandler(team.game)}\n                    >\n                      Add&nbsp;/&nbsp;Edit\n                    </Button>\n                    <Modal\n                      isOpen={showModals[`${team.game}`]}\n                      toggle={() => clickHandler(team.game)}\n                      centered\n                      scrollable\n                      keyboard\n                      size=\"lg\"\n                    >\n                      <ModalHeader\n                        className={`${styles['modal-header']} ${styles['login-header']}`}\n                      >\n                        Players - {team.game.substr(0, team.game.length - 2)} [\n                        {team.game.endsWith('B') && 'BOYS'}\n                        {team.game.endsWith('G') && 'GIRLS'}\n                        {team.game.endsWith('M') && 'MIXED'}]\n                      </ModalHeader>\n                      <ModalBody className={`${styles['modal-body']}`}>\n                        <Alert\n                          color=\"warning\"\n                          style={{\n                            fontSize: '16px',\n                            paddingTop: '10px',\n                            paddingBottom: '10px',\n                          }}\n                        >\n                          {' '}\n                          Your changes are not saved unless you submit them.\n                        </Alert>\n                        <table\n                          align=\"center\"\n                          cellPadding=\"20\"\n                          className={`${styles['modal-table']}`}\n                        >\n                          {['Taekwondo', 'Boxing'].includes(\n                            team.game.substr(0, team.game.length - 2)\n                          ) && (\n                              <tr>\n                                <td>\n                                  <b> </b>\n                                </td>\n                                <td colSpan=\"2\" className=\"text-danger text-center\">\n                                  <b>\n                                    MAXIMUM PLAYERS:{' '}\n                                    {team.game.substr(0, team.game.length - 2) ===\n                                      'Boxing' ? (\n                                      <span>10</span>\n                                    ) : (\n                                      <span>15</span>\n                                    )}\n                                  </b>\n                                </td>\n                              </tr>\n                            )}\n                          {['Taekwondo', 'Weightlifting', 'Boxing'].includes(\n                            team.game.substr(0, team.game.length - 2)\n                          ) && (\n                              <tr>\n                                {' '}\n                                <td>\n                                  <b> </b>\n                                </td>\n                                <td colSpan=\"2\" className=\"text-danger text-center\">\n                                  <b>\n                                    Maximum 2 players are allowed in each weight\n                                    category\n                                  </b>\n                                </td>\n                              </tr>\n                            )}\n                          <tr>\n                            {['Taekwondo', 'Weightlifting', 'Boxing'].includes(\n                              team.game.substr(0, team.game.length - 2)\n                            ) && (\n                                <td>\n                                  <b>\n                                    {\n                                      labels[\n                                      team.game.substr(0, team.game.length - 2)\n                                      ][0]\n                                    }\n                                  </b>\n                                </td>\n                              )}\n                            <td>\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Captain / Leader Name\"\n                                data-game={team.game}\n                                name=\"captain_name\"\n                                value={\n                                  inputFields[`${team.game}`][0]['captain_name']\n                                }\n                                onChange={inputChangeHandler}\n                              ></input>\n                            </td>\n                            <td>\n                              <input\n                                type=\"tel\"\n                                className=\"form-control\"\n                                data-game={team.game}\n                                name=\"captain_phone\"\n                                placeholder=\"Captain / Leader Phone No.\"\n                                value={\n                                  inputFields[`${team.game}`][0]['captain_phone']\n                                }\n                                onChange={inputChangeHandler}\n                              ></input>\n                            </td>\n                          </tr>\n                        </table>\n                        <table\n                          align=\"center\"\n                          cellpadding=\"20\"\n                          className={`${styles['modal-table']}`}\n                        >\n                          {team.players.map((row, rowIndex) => {\n                            return (\n                              <tr>\n                                {[\n                                  'Taekwondo',\n                                  'Weightlifting',\n                                  'Boxing',\n                                ].includes(\n                                  team.game.substr(0, team.game.length - 2)\n                                ) && (\n                                    <td>\n                                      <b>\n                                        {\n                                          labels[\n                                          team.game.substr(\n                                            0,\n                                            team.game.length - 2\n                                          )\n                                          ][rowIndex + 1]\n                                        }\n                                      </b>\n                                    </td>\n                                  )}\n                                {row.map((col, colIndex) => {\n                                  return (\n                                    <td>\n                                      <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        placeholder={`Player ${2 * rowIndex + colIndex + 1\n                                          }`}\n                                        data-game={team.game}\n                                        name={`${2 * rowIndex + colIndex}`}\n                                        value={\n                                          inputFields[`${team.game}`][0][\n                                          'players'\n                                          ][rowIndex][colIndex]\n                                        }\n                                        onChange={inputChangeHandler}\n                                      ></input>\n                                    </td>\n                                  );\n                                })}\n                              </tr>\n                            );\n                          })}\n                        </table>\n                      </ModalBody>\n                      <ModalFooter className={`${styles['modal-footer']}`}>\n                        <Button\n                          className={`${styles.cancel}`}\n                          onClick={() => clickHandler(team.game)}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          className={`${styles['register-now']}`}\n                          onClick={() => {\n                            submitHandler(team.game);\n                          }}\n                        >\n                          Submit\n                        </Button>\n                      </ModalFooter>\n                    </Modal>\n                  </td>\n                </tr>\n              );\n            })\n          )}\n        </table>\n      </div>\n      <br />\n      <div className='sub_details'>\n        <div className='heading-register'>\n          <div className=\"events-heading\">Girls</div>\n          <div className=\"edit_button\">\n            <Link\n              // to=\"/dashboard/events\"\n              onClick={()=>{toast.error('Registrations are closed', {\n                position: toast.POSITION.BOTTOM_RIGHT,\n              });}}\n              style={{ textDecoration: 'none', color: 'rgba(2, 0, 33, 1)' }}\n            >\n              Edit\n            </Link>\n          </div>\n        </div>\n        {/* <div className={`${styles['events-heading']}`}>Girls</div> */}\n        <table\n          className={`${styles['events-table']}`}\n          align=\"center\"\n          cellpadding=\"20\"\n          border=\"1\"\n        >\n          <tr>\n            <th\n              className={`${styles['left-column']}`}\n              style={{ textAlign: 'center' }}\n            >\n              Event Name\n            </th>\n            <th\n              className={`${styles['middle-column']}`}\n              style={{ textAlign: 'center' }}\n            >\n              Players Name / Count\n            </th>\n            <th\n              className={`${styles['right-column']}`}\n              style={{ textAlign: 'center' }}\n            >\n              Edit Players\n            </th>\n          </tr>\n          {girlTeams.length === 0 ? (\n            <tr style={{ textAlign: 'center' }}>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n            </tr>\n          ) : (\n            girlTeams.map((team, ind) => {\n              return (\n                <tr key={ind}>\n                  <td>\n                    <b>{team.game.substr(0, team.game.length - 2)}</b>\n                  </td>\n                  <td>\n                    {team.captain_name && (\n                      <b>\n                        Captain / Leader: {team.captain_name}{' '}\n                        {team.captain_phone && (\n                          <span>({team.captain_phone})</span>\n                        )}\n                        <br />\n                      </b>\n                    )}\n                    {team.players.some((row) => row.some((s) => s.length)) && (\n                      <b>\n                        {/* {team.game.substr(0, team.game.length - 2) ===\n                      'Athletics' ? (\n                        <span>Total Number of Boys: </span>\n                      ) : (\n                        <span>Players Name: </span>\n                      )} */}\n                        <span>Players Name: </span>\n                      </b>\n                    )}\n                    {team.players\n                      .reduce((prev, cur) => [\n                        ...prev.filter((s) => s.length),\n                        ...cur.filter((s) => s.length),\n                      ])\n                      .slice(\n                        0,\n                        team.players.reduce((prev, cur) => [\n                          ...prev.filter((s) => s.length),\n                          ...cur.filter((s) => s.length),\n                        ]).length - 1\n                      )\n                      .map((player, ind) => {\n                        return <span key={ind}>{player}, </span>;\n                      })}\n                    {team.players.reduce((prev, cur) => [\n                      ...prev.filter((s) => s.length),\n                      ...cur.filter((s) => s.length),\n                    ]).length !== 0 && (\n                        <span>\n                          {\n                            team.players\n                              .reduce((prev, cur) => [\n                                ...prev.filter((s) => s.length),\n                                ...cur.filter((s) => s.length),\n                              ])\n                              .slice(-1)[0]\n                          }\n                        </span>\n                      )}\n                  </td>\n                  <td>\n                    <Button\n                      className={`${styles['register-now']}`}\n                      data-toggle={team.game}\n                      onClick={() => clickHandler(team.game)}\n                    >\n                      Add&nbsp;/&nbsp;Edit\n                    </Button>\n                    <Modal\n                      isOpen={showModals[`${team.game}`]}\n                      toggle={() => clickHandler(team.game)}\n                      centered\n                      scrollable\n                      keyboard\n                      size=\"lg\"\n                    >\n                      <ModalHeader\n                        className={`${styles['modal-header']} ${styles['login-header']}`}\n                      >\n                        Players - {team.game.substr(0, team.game.length - 2)} [\n                        {team.game.endsWith('B') && 'BOYS'}\n                        {team.game.endsWith('G') && 'GIRLS'}\n                        {team.game.endsWith('M') && 'MIXED'}]\n                      </ModalHeader>\n                      <ModalBody className={`${styles['modal-body']}`}>\n                        <Alert\n                          color=\"warning\"\n                          style={{\n                            fontSize: '16px',\n                            paddingTop: '10px',\n                            paddingBottom: '10px',\n                          }}\n                        >\n                          {' '}\n                          Your changes are not saved unless you submit them.\n                        </Alert>\n\n                        <table\n                          align=\"center\"\n                          cellPadding=\"20\"\n                          className={`${styles['modal-table']}`}\n                        >\n                          {['Taekwondo', 'Boxing'].includes(\n                            team.game.substr(0, team.game.length - 2)\n                          ) && (\n                              <tr>\n                                <td>\n                                  <b> </b>\n                                </td>\n                                <td colSpan=\"2\" className=\"text-danger text-center\">\n                                  <b>\n                                    MAXIMUM PLAYERS:{' '}\n                                    {team.game.substr(0, team.game.length - 2) ===\n                                      'Boxing' ? (\n                                      <span>10</span>\n                                    ) : (\n                                      <span>15</span>\n                                    )}\n                                  </b>\n                                </td>\n                              </tr>\n                            )}\n                          {['Taekwondo', 'Weightlifting', 'Boxing'].includes(\n                            team.game.substr(0, team.game.length - 2)\n                          ) && (\n                              <tr>\n                                {' '}\n                                <td>\n                                  <b> </b>\n                                </td>\n                                <td colSpan=\"2\" className=\"text-danger text-center\">\n                                  <b>\n                                    Maximum 2 players are allowed in each weight\n                                    category\n                                  </b>\n                                </td>\n                              </tr>\n                            )}\n                          <tr>\n                            {['Taekwondo', 'Boxing'].includes(\n                              team.game.substr(0, team.game.length - 2)\n                            ) && (\n                                <td>\n                                  <b>\n                                    {\n                                      labels[\n                                      team.game.substr(0, team.game.length - 2)\n                                      ][0]\n                                    }\n                                  </b>\n                                </td>\n                              )}\n                            <td>\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Captain / Leader Name\"\n                                data-game={team.game}\n                                name=\"captain_name\"\n                                value={\n                                  inputFields[`${team.game}`][0]['captain_name']\n                                }\n                                onChange={inputChangeHandler}\n                              ></input>\n                            </td>\n                            <td>\n                              <input\n                                type=\"tel\"\n                                className=\"form-control\"\n                                data-game={team.game}\n                                name=\"captain_phone\"\n                                placeholder=\"Captain / Leader Phone No.\"\n                                value={\n                                  inputFields[`${team.game}`][0]['captain_phone']\n                                }\n                                onChange={inputChangeHandler}\n                              ></input>\n                            </td>\n                          </tr>\n                        </table>\n                        <table\n                          align=\"center\"\n                          cellpadding=\"20\"\n                          className={`${styles['modal-table']}`}\n                        >\n                          {team.players.map((row, rowIndex) => {\n                            return (\n                              <tr>\n                                {['Taekwondo', 'Boxing'].includes(\n                                  team.game.substr(0, team.game.length - 2)\n                                ) && (\n                                    <td>\n                                      <b>\n                                        {\n                                          labels[\n                                          team.game.substr(\n                                            0,\n                                            team.game.length - 2\n                                          )\n                                          ][rowIndex + 1]\n                                        }\n                                      </b>\n                                    </td>\n                                  )}\n                                {row.map((col, colIndex) => {\n                                  return (\n                                    <td>\n                                      <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        placeholder={`Player ${2 * rowIndex + colIndex + 1\n                                          }`}\n                                        data-game={team.game}\n                                        name={`${2 * rowIndex + colIndex}`}\n                                        value={\n                                          inputFields[`${team.game}`][0][\n                                          'players'\n                                          ][rowIndex][colIndex]\n                                        }\n                                        onChange={inputChangeHandler}\n                                      ></input>\n                                    </td>\n                                  );\n                                })}\n                              </tr>\n                            );\n                          })}\n                        </table>\n                      </ModalBody>\n                      <ModalFooter className={`${styles['modal-footer']}`}>\n                        <Button\n                          className={`${styles.cancel}`}\n                          onClick={() => clickHandler(team.game)}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          className={`${styles['register-now']}`}\n                          onClick={() => {\n                            submitHandler(team.game);\n                          }}\n                        >\n                          Submit\n                        </Button>\n                      </ModalFooter>\n                    </Modal>\n                  </td>\n                </tr>\n              );\n            })\n          )}\n        </table>\n      </div>\n      <br />\n      <div className='sub_details'>\n        <div className='heading-register'>\n          <div className=\"events-heading\">Mixed</div>\n          <div className=\"edit_button\">\n            <Link\n              // to=\"/dashboard/events\"\n              onClick={()=>{toast.error('Registrations are closed', {\n                position: toast.POSITION.BOTTOM_RIGHT,\n              });}}\n              style={{ textDecoration: 'none', color: 'rgba(2, 0, 33, 1)' }}\n            >\n              Edit\n            </Link>\n          </div>\n        </div>\n        {/* <div className={`${styles['events-heading']}`}>Mixed</div> */}\n        <table\n          className={`${styles['events-table']}`}\n          align=\"center\"\n          cellpadding=\"20\"\n          border=\"1\"\n        >\n          <tr>\n            <th\n              className={`${styles['left-column']}`}\n              style={{ textAlign: 'center' }}\n            >\n              Event Name\n            </th>\n            <th\n              className={`${styles['middle-column']}`}\n              style={{ textAlign: 'center' }}\n            >\n              Players Name / Count\n            </th>\n            <th\n              className={`${styles['right-column']}`}\n              style={{ textAlign: 'center' }}\n            >\n              Edit Players\n            </th>\n          </tr>\n          {mixedTeams.length === 0 ? (\n            <tr style={{ textAlign: 'center' }}>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n            </tr>\n          ) : (\n            mixedTeams.map((team, ind) => {\n              return (\n                <tr key={ind}>\n                  <td>\n                    <b>{team.game.substr(0, team.game.length - 2)}</b>\n                  </td>\n                  <td>\n                    {team.captain_name && (\n                      <b>\n                        Captain / Leader: {team.captain_name}{' '}\n                        {team.captain_phone && (\n                          <span>({team.captain_phone})</span>\n                        )}\n                        <br />\n                      </b>\n                    )}\n                    {team.players.some((row) => row.some((s) => s.length)) && (\n                      <b>\n                        {/* {team.game.substr(0, team.game.length - 2) ===\n                      'Athletics' ? (\n                        <span>Total Number of Boys: </span>\n                      ) : (\n                        <span>Players Name: </span>\n                      )} */}\n                        <span>Players Name: </span>\n                      </b>\n                    )}\n                    {team.players\n                      .reduce((prev, cur) => [\n                        ...prev.filter((s) => s.length),\n                        ...cur.filter((s) => s.length),\n                      ])\n                      .slice(\n                        0,\n                        team.players.reduce((prev, cur) => [\n                          ...prev.filter((s) => s.length),\n                          ...cur.filter((s) => s.length),\n                        ]).length - 1\n                      )\n                      .map((player, ind) => {\n                        return <span key={ind}>{player}, </span>;\n                      })}\n                    {team.players.reduce((prev, cur) => [\n                      ...prev.filter((s) => s.length),\n                      ...cur.filter((s) => s.length),\n                    ]).length !== 0 && (\n                        <span>\n                          {\n                            team.players\n                              .reduce((prev, cur) => [\n                                ...prev.filter((s) => s.length),\n                                ...cur.filter((s) => s.length),\n                              ])\n                              .slice(-1)[0]\n                          }\n                        </span>\n                      )}\n                  </td>\n                  <td>\n                    <Button\n                      className={`${styles['register-now']}`}\n                      data-toggle={team.game}\n                      onClick={() => clickHandler(team.game)}\n                    >\n                      Add&nbsp;/&nbsp;Edit\n                    </Button>\n                    <Modal\n                      isOpen={showModals[`${team.game}`]}\n                      toggle={() => clickHandler(team.game)}\n                      centered\n                      scrollable\n                      keyboard\n                      size=\"lg\"\n                    >\n                      <ModalHeader\n                        className={`${styles['modal-header']} ${styles['login-header']}`}\n                      >\n                        Players - {team.game.substr(0, team.game.length - 2)} [\n                        {team.game.endsWith('B') && 'BOYS'}\n                        {team.game.endsWith('G') && 'GIRLS'}\n                        {team.game.endsWith('M') && 'MIXED'}]\n                      </ModalHeader>\n                      <ModalBody className={`${styles['modal-body']}`}>\n                        <div style={{ backgroundColor: 'red' }}>\n                          <Alert\n                            // color=\"warning\"\n                            style={{\n                              fontSize: '16px',\n                              paddingTop: '10px',\n                              paddingBottom: '10px',\n                              backgroundColor: 'red'\n                            }}\n\n                          >\n                            {' '}\n                            Your changes are not saved unless you submit them.\n                          </Alert></div>\n                        <table align=\"center\" cellPadding=\"20\">\n                          <tr>\n                            <td>\n                              <input\n                                type=\"text\"\n                                style={{ border: '2px solid #760e53' }}\n                                className={`${styles['form-control']}`}\n                                placeholder=\"Captain / Leader Name\"\n                                data-game={team.game}\n                                name=\"captain_name\"\n                                value={\n                                  inputFields[`${team.game}`][0]['captain_name']\n                                }\n                                onChange={inputChangeHandler}\n                              ></input>\n                            </td>\n                            <td>\n                              <input\n                                type=\"tel\"\n                                className=\"form-control\"\n                                data-game={team.game}\n                                name=\"captain_phone\"\n                                placeholder=\"Captain / Leader Phone No.\"\n                                value={\n                                  inputFields[`${team.game}`][0]['captain_phone']\n                                }\n                                onChange={inputChangeHandler}\n                              ></input>\n                            </td>\n                          </tr>\n                        </table>\n                        <table align=\"center\" cellpadding=\"20\">\n                          {team.players.map((row, rowIndex) => {\n                            return (\n                              <tr>\n                                {row.map((col, colIndex) => {\n                                  return (\n                                    <td>\n                                      <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        placeholder={`Player ${2 * rowIndex + colIndex + 1\n                                          }`}\n                                        data-game={team.game}\n                                        name={`${2 * rowIndex + colIndex}`}\n                                        value={\n                                          inputFields[`${team.game}`][0][\n                                          'players'\n                                          ][rowIndex][colIndex]\n                                        }\n                                        style={{ border: '1px solid #760e53' }}\n                                        onChange={inputChangeHandler}\n                                      ></input>\n                                    </td>\n                                  );\n                                })}\n                              </tr>\n                            );\n                          })}\n                        </table>\n                      </ModalBody>\n                      <ModalFooter className={`${styles['modal-footer']}`}>\n                        <Button\n                          className={`${styles.cancel}`}\n                          onClick={() => clickHandler(team.game)}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          className={`${styles['register-now']}`}\n                          onClick={() => {\n                            submitHandler(team.game);\n                          }}\n                        >\n                          Submit\n                        </Button>\n                      </ModalFooter>\n                    </Modal>\n                  </td>\n                </tr>\n              );\n            })\n          )}\n        </table></div>\n      <br />\n    </>\n  );\n};\n\nexport default EventsDb;\n","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Registration.css';\nimport Events from './Events/Events';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Registration = () => {\n  const [contdetails, setContDetails] = useState({\n    num_of_boys: '-',\n    num_of_girls: '-',\n    college_rep: '-',\n    leader_name: '-',\n    leader_contact_num: '-',\n    num_of_faculty_members: '-',\n    num_of_coaches_pti: '-',\n    num_of_supporting_staff: '-',\n  });\n  const token = localStorage.getItem('token');\n  const baseUrl = process.env.REACT_APP_BASE_URL;\n\n  useEffect(() => {\n    axios\n      .get(`${baseUrl}teams/contingent/details/`, {\n        headers: {\n          Authorization: `Token ${token}`,\n        },\n      })\n      .then((res) => {\n        // console.log('contdetails data=', res.data);\n        setContDetails(res.data);\n        // console.log('contdetails', contdetails);\n      })\n      .catch((err) => {\n        console.log('error=', err);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"user-dashboard regn_Pad\">\n      <div className=\"row_dbRegistration\">\n        <div className=\"col-xs-12 gutter2 widthAdjust\">\n          <div className=\"welcome-text2\">\n            {/* <div\n              style={{ textAlign: 'center', fontSize: '15px', color: 'red' }}\n            >\n              <b>\n                <u>NOTE:</u>\n              </b>{' '}\n              Enter the <b>number</b> of players in 'Athletics', whereas the{' '}\n              <b>name</b> of players in other events.\n            </div> */}\n            <div className=\"text-justify\">\n              <h2>\n                <br></br>\n                <div className=\"sub_details\">\n                  <div className='contingent' >\n                    <div className=\"events-heading\">CONTINGENT DETAILS</div>\n                    <div className=\"edit_button\">\n                      <Link\n                        // to=\"/dashboard/contingentEdit\"\n                        onClick={()=>{toast.error('Registrations are closed', {\n                          position: toast.POSITION.BOTTOM_RIGHT,\n                        });}}\n                        style={{ textDecoration: 'none', color: 'rgba(2, 0, 33, 1)' }}\n                      >\n                        Edit\n                      </Link>\n                    </div>\n                  </div>\n\n                  <table\n                    align=\"center\"\n                    cellpadding=\"20\"\n                    className=\"events-table\"\n                  >\n                    <tr>\n                      <td className=\"left-column\" style={{ textAlign: 'left' }}>\n                        <b>Total Number of Boys</b>{' '}\n                      </td>\n                      <td className=\"right-column\">\n                        {contdetails.num_of_boys}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"left-column\" style={{ textAlign: 'left' }}>\n                        <b>Total Number of Girls</b>{' '}\n                      </td>\n                      <td className=\"right-column\">\n                        {contdetails.num_of_girls}\n                      </td>\n                    </tr>\n\n                    <tr>\n                      <td\n                        className=\"left-column\"\n                        style={{ textAlign: 'left', lineHeight: '1.5' }}\n                      >\n                        <b>\n                          Total Number of Faculty members accompanying the\n                          contingent\n                        </b>{' '}\n                      </td>\n                      <td className=\"right-column\">\n                        {contdetails.num_of_faculty_members}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td\n                        className=\"left-column\"\n                        style={{ textAlign: 'left', lineHeight: '1.5' }}\n                      >\n                        <b>\n                          {`Total Number of Coaches & PTI accompanying the contingent`}\n                        </b>{' '}\n                      </td>\n                      <td className=\"right-column\">\n                        {contdetails.num_of_coaches_pti}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td\n                        className=\"left-column\"\n                        style={{ textAlign: 'left', lineHeight: '1.5' }}\n                      >\n                        <b>\n                          Total Number of Supporting Staff accompanying the\n                          contingent\n                        </b>{' '}\n                      </td>\n                      <td className=\"right-column\">\n                        {contdetails.num_of_supporting_staff}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td\n                        className=\"left-column\"\n                        style={{ textAlign: 'left', lineHeight: '1.5' }}\n                      >\n                        <b>Full Name of Contingent Leader</b>{' '}\n                      </td>\n                      <td className=\"right-column\">\n                        {contdetails.leader_name}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td\n                        className=\"left-column\"\n                        style={{ textAlign: 'left', lineHeight: '1.5' }}\n                      >\n                        <b>Contact Number of Contingent Leader</b>{' '}\n                      </td>\n                      <td className=\"right-column\">\n                        {contdetails.leader_contact_num}\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n                <br></br>\n                <br></br>\n                {/* <div className=\"contingent_details\">\n                <div style={{ display: 'flex',alignItems: 'center',justifyContent:'space-between',paddingLeft:'38%'}}>\n                    <div className=\"edit_button\">\n                      <Link\n                        to=\"/dashboard/events\"\n                        style={{ textDecoration: 'none', color: '#760e53' }}\n                      >\n                        Edit\n                      </Link>\n                    </div>\n                  </div>\n                  <Events />\n                </div> */}\n                <Events />\n              </h2>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Registration;\n"],"names":["token","localStorage","getItem","showModals","setShowModals","useState","Athletics_B","Athletics_G","Badminton_B","Badminton_G","Basketball_B","Basketball_G","Boxing_B","Boxing_G","Chess_M","Cycling_M","Cricket_B","Football_B","Football_G","Handball_B","Handball_G","Hockey_B","Kabaddi_B","Kabaddi_G","Powerlifting_B","Squash_B","Squash_G","Taekwondo_B","Taekwondo_G","Volleyball_B","Volleyball_G","Weightlifting_B","setAthletics_G","setBoxing_G","setTaekwondo_G","setVolleyball_B","setVolleyball_G","Tennis_G","setTennis_G","Tennis_B","setTennis_B","LTennis_B","setLTennis_B","LTennis_G","setLTennis_G","KhoKho_G","setKhoKho_G","KhoKho_B","setKhoKho_B","setKabaddi_B","setKabaddi_G","setBadminton_G","setBadminton_B","setSquash_B","setSquash_G","setWeightlifting_B","setHockey_B","setHandball_B","setHandball_G","setFootball_B","setFootball_G","setCricket_B","setTaekwondo_B","setBoxing_B","setAthletics_B","setChess_M","setCycling_M","setBasketball_G","setBasketball_B","setPowerlifting_B","boyTeams","setBoyTeams","girlTeams","setGirlTeams","mixedTeams","setMixedTeams","inputFields","labels","Boxing","Weightlifting","Taekwondo","baseUrl","process","REACT_APP_BASE_URL","useEffect","axios","headers","Authorization","then","data","team","rows","players","reduce","key","index","push","length","game","endsWith","prevState","newState","catch","err","console","error","clickHandler","inputChangeHandler","e","target","attributes","value","name","isNaN","row","Math","floor","Number","col","submitHandler","obj","res","i","className","onClick","toast","position","style","textDecoration","color","styles","align","cellpadding","border","textAlign","map","ind","substr","captain_name","captain_phone","some","s","prev","cur","filter","slice","player","isOpen","toggle","centered","scrollable","keyboard","size","fontSize","paddingTop","paddingBottom","cellPadding","includes","colSpan","type","placeholder","onChange","rowIndex","colIndex","backgroundColor","contdetails","setContDetails","num_of_boys","num_of_girls","college_rep","leader_name","leader_contact_num","num_of_faculty_members","num_of_coaches_pti","num_of_supporting_staff","log","lineHeight","Events"],"sourceRoot":""}